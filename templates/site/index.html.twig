{% extends 'base.html.twig' %}

{% block title %}Sites{% endblock %}

{% block body %}
<div class="w-full px-4 py-6">
    <div class="mb-6 md:mb-8 text-center md:text-left flex flex-col md:flex-row md:items-center md:justify-between">
        <div>
            <h1 class="text-xl sm:text-2xl md:text-3xl font-bold text-gray-900 flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 mr-2" style="color: #c99b64;" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"/></svg>
                Liste des Sites
            </h1>
            <p class="text-sm sm:text-base text-gray-600 mt-2">Gérez les sites de vos clients</p>
        </div>
        <a href="{{ path('site_new') }}" class="btn inline-flex items-center mt-4 md:mt-0 px-4 py-2 text-white rounded-lg transition duration-150 ease-in-out text-sm font-semibold shadow">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/></svg>
            Nouveau site
        </a>
    </div>

    <div class="bg-white rounded-lg shadow-sm p-4 mb-6" x-data="{ open: true }" x-init="open = (window.innerWidth >= 768)">
        <div class="flex justify-between items-center mb-4">
            <h2 class="text-lg font-medium text-gray-900">Filtres</h2>
            <div class="flex items-center space-x-3">
                <button type="button" @click="open = !open" class="md:hidden text-sm text-blue-600 hover:text-blue-800 flex items-center">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h16a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1v-2zM3 16a1 1 0 011-1h16a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1v-2z" />
                    </svg>
                    <span>Filtres</span>
                </button>
            </div>
        </div>

        <div x-show="open" x-cloak class="transition">
            {{ form_start(searchForm, {'method': 'get'}) }}
            <div class="grid grid-cols-1 md:grid-cols-3 lg:grid-cols-5 gap-4 items-end">
                <div>
                    {{ form_label(searchForm.codeGesec, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
                    {{ form_widget(searchForm.codeGesec, {'attr': {'class':'block w-full rounded-md border-gray-300 shadow-sm sm:text-sm'}}) }}
                </div>

                <div>
                    {{ form_label(searchForm.client, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
                    {{ form_widget(searchForm.client, {'attr': {'class':'block w-full rounded-md border-gray-300 shadow-sm sm:text-sm pr-8'}}) }}
                </div>

                <div>
                    {{ form_label(searchForm.statut, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
                    {{ form_widget(searchForm.statut, {'attr': {'class':'block w-full rounded-md border-gray-300 shadow-sm sm:text-sm pr-8'}}) }}
                </div>

                <div>
                    {{ form_label(searchForm.codePostal, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
                    {{ form_widget(searchForm.codePostal, {'attr': {'class':'block w-full rounded-md border-gray-300 shadow-sm sm:text-sm'}}) }}
                </div>

                <div>
                    {{ form_label(searchForm.contactEmail, null, {'label_attr': {'class': 'block text-sm font-medium text-gray-700 mb-1'}}) }}
                    {{ form_widget(searchForm.contactEmail, {'attr': {'class':'block w-full rounded-md border-gray-300 shadow-sm sm:text-sm'}}) }}
                </div>
            </div>

            <div class="mt-4 flex flex-col md:flex-row md:justify-between md:items-center space-y-3 md:space-y-0">
                <div class="flex items-end gap-2">
                    <a href="{{ path('site_index') }}" class="inline-flex items-center px-4 py-2 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition duration-150 text-sm font-medium">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"/></svg>
                        Réinitialiser
                    </a>
                    <button type="submit" class="btn inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg transition duration-150 text-sm font-medium">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.293A1 1 0 013 6.586V4z"/></svg>
                        Filtrer
                    </button>
                </div>
            </div>
            {{ form_end(searchForm) }}
        </div>
    </div>

    <div class="bg-white rounded-xl shadow-md overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gradient-to-r from-blue-50 to-indigo-50">
                <tr>
                    <th class="px-4 py-3 text-left text-xs font-semibold text-gray-700">Code Gesec</th>
                    <th class="px-4 py-3 text-left text-xs font-semibold text-gray-700">Code Site</th>
                    <th class="px-4 py-3 text-left text-xs font-semibold text-gray-700">Nom</th>
                    <th class="px-4 py-3 text-left text-xs font-semibold text-gray-700">Région client</th>
                    <th class="px-4 py-3 text-left text-xs font-semibold text-gray-700">Ville</th>
                    <th class="px-4 py-3 text-left text-xs font-semibold text-gray-700">Code postal</th>
                    <th class="px-4 py-3 text-left text-xs font-semibold text-gray-700">Contact</th>
                    <th class="px-4 py-3 text-left text-xs font-semibold text-gray-700">Email</th>
                    <th class="px-4 py-3 text-left text-xs font-semibold text-gray-700">Client</th>
                    <th class="px-4 py-3 text-left text-xs font-semibold text-gray-700">Statut</th>
                    <th class="px-4 py-3 text-left text-xs font-semibold text-gray-700">Actions</th>
                </tr>
            </thead>
            <tbody class="divide-y divide-gray-100">
                {% for site in sites %}
                    <tr class="hover:bg-blue-50 transition" id="site-row-{{ site.siteId }}">
                        <td class="px-4 py-3 text-sm text-gray-900 font-medium">{{ site.codeGesec }}</td>
                        <td class="px-4 py-3 text-sm text-gray-600">{{ site.codeSite }}</td>
                        <td class="px-4 py-3 text-sm text-gray-600">{{ site.nom }}</td>
                        <td class="px-4 py-3 text-sm text-gray-600">{{ site.regionClient }}</td>
                        <td class="px-4 py-3 text-sm text-gray-600">{{ site.ville }}</td>
                        <td class="px-4 py-3 text-sm text-gray-600">{{ site.codePostal }}</td>
                        <td class="px-4 py-3 text-sm text-gray-600">{{ site.contactNom }}</td>
                        <td class="px-4 py-3 text-sm text-gray-600">{{ site.contactEmail }}</td>
                        <td class="px-4 py-3 text-sm text-gray-600">{{ site.client.nom }}</td>
                        <td class="px-4 py-3">
                            <span id="site-status-{{ site.siteId }}" class="inline-block px-2 py-1 text-xs font-bold 
                                {% if site.statut.value == 'ACTIF' %}
                                    bg-green-100 text-green-700
                                {% elseif site.statut.value == 'INACTIF' %}
                                    bg-gray-100 text-gray-500
                                {% else %}
                                    bg-yellow-100 text-yellow-700
                                {% endif %} rounded-full">
                                {{ site.statut.value }}
                            </span>
                        </td>
                        <td class="px-4 py-3 text-sm text-gray-600">
                            <div class="flex space-x-2">
                                <a href="{{ path('site_edit', {'id': site.siteId}) }}" class="inline-flex items-center p-2 bg-white rounded-md hover:bg-gray-100 ring-1 ring-inset ring-gray-200" title="Modifier">
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-gray-700" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z" />
                                    </svg>
                                </a>
                                
                                {% if site.statut and site.statut.value != 'FERME' %}
                                    <form method="post" action="{{ path('site_toggle_statut', {'id': site.siteId}) }}" class="toggle-status-form" data-site-id="{{ site.siteId }}">
                                        <input type="hidden" name="_token" value="{{ csrf_token('toggle-statut' ~ site.siteId) }}">
                                        <button type="button" class="toggle-status-btn inline-flex items-center p-2 bg-white rounded-md hover:bg-gray-100 ring-1 ring-inset ring-gray-200" title="{{ site.statut.value == 'ACTIF' ? 'Désactiver' : 'Activer' }}">
                                            {% if site.statut.value == 'ACTIF' %}
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-red-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636" />
                                                </svg>
                                            {% else %}
                                                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 text-green-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                                                </svg>
                                            {% endif %}
                                        </button>
                                    </form>
                                {% endif %}
                            </div>
                        </td>
                    </tr>
                {% else %}
                    <tr>
                        <td colspan="9" class="py-6 px-4 text-center text-sm italic text-gray-500">Aucun site trouvé.</td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
</div>

{% block javascripts %}
{{ parent() }}
<script>
    // Fonction pour basculer l'affichage des filtres
    function toggleFilterVisibility() {
        const filterContainer = document.getElementById('filterContainer');
        const filterText = document.getElementById('filterText');
        const filterIcon = document.getElementById('filterIcon');

        if (!filterContainer) return;

        if (filterContainer.style.display === 'none' || filterContainer.style.display === '') {
            filterContainer.style.display = 'block';
            if (filterText) filterText.textContent = 'Masquer les filtres';
            if (filterIcon) filterIcon.style.transform = 'rotate(180deg)';
        } else {
            filterContainer.style.display = 'none';
            if (filterText) filterText.textContent = 'Afficher les filtres';
            if (filterIcon) filterIcon.style.transform = 'rotate(0deg)';
        }
    }

    // Vérifier si des filtres sont actifs (présence de query params)
    function checkActiveFilters() {
        const urlParams = new URLSearchParams(window.location.search);
        if (urlParams.toString()) {
            const filterContainer = document.getElementById('filterContainer');
            const filterText = document.getElementById('filterText');
            const filterIcon = document.getElementById('filterIcon');
            if (filterContainer) filterContainer.style.display = 'block';
            if (filterText) filterText.textContent = 'Masquer les filtres';
            if (filterIcon) filterIcon.style.transform = 'rotate(180deg)';
        }
    }

    document.addEventListener('DOMContentLoaded', function() {
        // Initialiser l'affichage des filtres si des paramètres sont présents
        checkActiveFilters();

        // Attacher l'écouteur au bouton de toggle des filtres
        const filterToggleBtn = document.getElementById('filterToggleBtn');
        if (filterToggleBtn) {
            filterToggleBtn.addEventListener('click', toggleFilterVisibility);
        }

        // Gestion du changement de statut
        const toggleButtons = document.querySelectorAll('.toggle-status-btn');
        
        toggleButtons.forEach(button => {
            button.addEventListener('click', function() {
                // Prevent double-trigger
                if (this.dataset.processing === '1') return;
                this.dataset.processing = '1';
                this.disabled = true;

                const form = this.closest('.toggle-status-form');
                const siteId = form.dataset.siteId;

                // Envoi de la requête AJAX
                fetch(form.action, {
                    method: 'POST',
                    body: new FormData(form),
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Mettre à jour le badge de statut
                        const statusBadge = document.getElementById(`site-status-${siteId}`);
                        statusBadge.textContent = data.newStatus;
                        statusBadge.className = `inline-block px-2 py-1 text-xs font-bold ${data.statusClass} rounded-full`;

                        // Mettre à jour l'icône du bouton
                        if (data.newStatus === 'ACTIF') {
                            button.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-red-600" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728A9 9 0 015.636 5.636m12.728 12.728L5.636 5.636" /></svg>';
                            button.title = 'Désactiver';
                        } else {
                            button.innerHTML = '<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-green-600" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" /></svg>';
                            button.title = 'Activer';
                        }

                        // Afficher un message de succès
                        const notification = document.createElement('div');
                        notification.className = 'fixed top-4 right-4 bg-green-50 text-green-800 px-4 py-2 rounded-md shadow-md z-50 animate-fadeIn';
                        notification.innerHTML = data.message;
                        document.body.appendChild(notification);

                        // Supprimer la notification après 3 secondes
                        setTimeout(() => {
                            notification.classList.add('animate-fadeOut');
                            setTimeout(() => notification.remove(), 500);
                        }, 3000);
                    } else {
                        console.error(data.message);
                    }
                })
                .catch(error => {
                    console.error('Erreur:', error);
                })
                .finally(() => {
                    // unlock button
                    this.dataset.processing = '0';
                    this.disabled = false;
                });
            });
        });
    });
</script>
<style>
    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(-10px); }
        to { opacity: 1; transform: translateY(0); }
    }
    @keyframes fadeOut {
        from { opacity: 1; transform: translateY(0); }
        to { opacity: 0; transform: translateY(-10px); }
    }
    .animate-fadeIn {
        animation: fadeIn 0.3s ease-in-out forwards;
    }
    .animate-fadeOut {
        animation: fadeOut 0.3s ease-in-out forwards;
    }
</style>
{% endblock %}
{% endblock %}
